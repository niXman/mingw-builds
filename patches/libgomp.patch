# HG changeset patch
# Parent 42bf4cf2c34533ce23040385341ba6e0bff38071

diff -r 42bf4cf2c345 libgomp/libgomp.h
--- a/libgomp/libgomp.h	Wed Apr 28 19:25:36 2010 -0600
+++ b/libgomp/libgomp.h	Sat Jun 05 08:43:48 2010 -0600
@@ -365,9 +365,20 @@
 }
 #else
 extern pthread_key_t gomp_tls_key;
+extern void initialize_team (void);
+extern void gomp_fatal (const char *, ...)
+	__attribute__((noreturn, format (printf, 1, 2)));
 static inline struct gomp_thread *gomp_thread (void)
 {
-  return pthread_getspecific (gomp_tls_key);
+  struct gomp_thread* GompThread = pthread_getspecific (gomp_tls_key);
+  if (!GompThread) {
+    initialize_team();
+    GompThread = pthread_getspecific (gomp_tls_key);
+    if (!GompThread) {
+      gomp_fatal("Uncorrectable NULL gomp_thread()");
+    }
+  }
+  return GompThread;
 }
 #endif
 
diff -r 42bf4cf2c345 libgomp/team.c
--- a/libgomp/team.c	Wed Apr 28 19:25:36 2010 -0600
+++ b/libgomp/team.c	Sat Jun 05 08:43:48 2010 -0600
@@ -244,6 +244,9 @@
       gomp_end_task ();
       free (task);
     }
+#ifndef HAVE_TLS
+  free(pthread_getspecific (gomp_tls_key));
+#endif
 }
 
 /* Launch a team.  */
@@ -512,25 +515,32 @@
 
 /* Constructors for this file.  */
 
-static void __attribute__((constructor))
+static short KeysCreated = 0;
+
+void __attribute__((constructor))
 initialize_team (void)
 {
   struct gomp_thread *thr;
 
 #ifndef HAVE_TLS
-  static struct gomp_thread initial_thread_tls_data;
+  struct gomp_thread *Ptr_initial_thread_tls_data;
+  Ptr_initial_thread_tls_data = 
+    (struct gomp_thread*) calloc(1,sizeof(struct gomp_thread));
 
-  pthread_key_create (&gomp_tls_key, NULL);
-  pthread_setspecific (gomp_tls_key, &initial_thread_tls_data);
+  if (!KeysCreated) pthread_key_create (&gomp_tls_key, NULL);
+  pthread_setspecific (gomp_tls_key, Ptr_initial_thread_tls_data);
 #endif
 
-  if (pthread_key_create (&gomp_thread_destructor, gomp_free_thread) != 0)
-    gomp_fatal ("could not create thread pool destructor.");
+  if (!KeysCreated && 
+      pthread_key_create (&gomp_thread_destructor, gomp_free_thread) != 0)
+      gomp_fatal ("could not create thread pool destructor.");
+
+  KeysCreated = 1;
 
 #ifdef HAVE_TLS
   thr = &gomp_tls_data;
 #else
-  thr = &initial_thread_tls_data;
+  thr = Ptr_initial_thread_tls_data;
 #endif
   gomp_sem_init (&thr->release, 0);
 }
