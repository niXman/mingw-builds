diff -urN binutils-2.37.orig/bfd/bfd-in.h binutils-2.37/bfd/bfd-in.h
--- binutils-2.37.orig/bfd/bfd-in.h	2021-07-08 19:37:19.000000000 +0800
+++ binutils-2.37/bfd/bfd-in.h	2021-08-01 11:10:24.948855200 +0800
@@ -126,7 +126,7 @@
 
 #if BFD_HOST_64BIT_LONG
 #define BFD_VMA_FMT "l"
-#elif defined (__MSVCRT__)
+#elif defined(__MSVCRT__) && !defined( __USE_MINGW_ANSI_STDIO)
 #define BFD_VMA_FMT "I64"
 #else
 #define BFD_VMA_FMT "ll"
diff -urN binutils-2.37.orig/bfd/bfd-in2.h binutils-2.37/bfd/bfd-in2.h
--- binutils-2.37.orig/bfd/bfd-in2.h	2021-07-08 19:37:19.000000000 +0800
+++ binutils-2.37/bfd/bfd-in2.h	2021-08-01 11:10:41.655887600 +0800
@@ -133,7 +133,7 @@
 
 #if BFD_HOST_64BIT_LONG
 #define BFD_VMA_FMT "l"
-#elif defined (__MSVCRT__)
+#elif defined(__MSVCRT__) && !defined(__USE_MINGW_ANSI_STDIO)
 #define BFD_VMA_FMT "I64"
 #else
 #define BFD_VMA_FMT "ll"
diff -urN binutils-2.37.orig/binutils/dwarf.c binutils-2.37/binutils/dwarf.c
--- binutils-2.37.orig/binutils/dwarf.c	2021-07-08 19:37:19.000000000 +0800
+++ binutils-2.37/binutils/dwarf.c	2021-08-01 11:11:10.369398700 +0800
@@ -218,7 +218,7 @@
 }
 
 #if SIZEOF_LONG_LONG > SIZEOF_LONG
-# ifndef __MINGW32__
+# if !defined(__MSVCRT__) || defined(__USE_MINGW_ANSI_STDIO)
 #  define DWARF_VMA_FMT		"ll"
 #  define DWARF_VMA_FMT_LONG	"%16.16llx"
 # else
diff -urN binutils-2.37.orig/binutils/nm.c binutils-2.37/binutils/nm.c
--- binutils-2.37.orig/binutils/nm.c	2021-07-08 19:37:19.000000000 +0800
+++ binutils-2.37/binutils/nm.c	2021-08-01 11:11:32.715864900 +0800
@@ -1312,7 +1312,7 @@
 #if BFD_HOST_64BIT_LONG
       ;
 #elif BFD_HOST_64BIT_LONG_LONG
-#ifndef __MSVCRT__
+#if !defined(__MSVCRT__) || defined(__USE_MINGW_ANSI_STDIO)
       length = "ll";
 #else
       length = "I64";
diff -urN binutils-2.37.orig/binutils/prdbg.c binutils-2.37/binutils/prdbg.c
--- binutils-2.37.orig/binutils/prdbg.c	2021-07-08 19:37:19.000000000 +0800
+++ binutils-2.37/binutils/prdbg.c	2021-08-01 11:11:43.981937700 +0800
@@ -497,7 +497,7 @@
 #if BFD_HOST_64BIT_LONG_LONG
   else if (sizeof (vma) <= sizeof (unsigned long long))
     {
-#ifndef __MSVCRT__
+#if !defined(__MSVCRT__) || defined(__USE_MINGW_ANSI_STDIO)
       if (hexp)
 	sprintf (buf, "0x%llx", (unsigned long long) vma);
       else if (unsignedp)
diff -urN binutils-2.37.orig/binutils/strings.c binutils-2.37/binutils/strings.c
--- binutils-2.37.orig/binutils/strings.c	2021-07-08 19:37:19.000000000 +0800
+++ binutils-2.37/binutils/strings.c	2021-08-01 11:12:04.006375800 +0800
@@ -610,7 +610,7 @@
 	  case 8:
 	    if (sizeof (start) > sizeof (long))
 	      {
-#ifndef __MSVCRT__
+#if !defined(__MSVCRT__) || defined(__USE_MINGW_ANSI_STDIO)
 		printf ("%7llo ", (unsigned long long) start);
 #else
 		printf ("%7I64o ", (unsigned long long) start);
@@ -623,7 +623,7 @@
 	  case 10:
 	    if (sizeof (start) > sizeof (long))
 	      {
-#ifndef __MSVCRT__
+#if !defined(__MSVCRT__) || defined(__USE_MINGW_ANSI_STDIO)
 		printf ("%7llu ", (unsigned long long) start);
 #else
 		printf ("%7I64d ", (unsigned long long) start);
@@ -636,7 +636,7 @@
 	  case 16:
 	    if (sizeof (start) > sizeof (long))
 	      {
-#ifndef __MSVCRT__
+#if !defined(__MSVCRT__) || defined(__USE_MINGW_ANSI_STDIO)
 		printf ("%7llx ", (unsigned long long) start);
 #else
 		printf ("%7I64x ", (unsigned long long) start);
diff -urN binutils-2.37.orig/gas/as.h binutils-2.37/gas/as.h
--- binutils-2.37.orig/gas/as.h	2021-07-08 19:37:19.000000000 +0800
+++ binutils-2.37/gas/as.h	2021-08-01 11:12:40.156606600 +0800
@@ -405,10 +405,10 @@
 
 #define PRINTF_LIKE(FCN) \
   void FCN (const char *format, ...) \
-    __attribute__ ((__format__ (__printf__, 1, 2)))
+    __attribute__ ((__format__ (gnu_printf, 1, 2)))
 #define PRINTF_WHERE_LIKE(FCN) \
   void FCN (const char *file, unsigned int line, const char *format, ...) \
-    __attribute__ ((__format__ (__printf__, 3, 4)))
+    __attribute__ ((__format__ (gnu_printf, 3, 4)))
 
 #else /* __GNUC__ < 2 || defined(VMS) */
 
diff -urN binutils-2.37.orig/gold/configure binutils-2.37/gold/configure
--- binutils-2.37.orig/gold/configure	2021-07-19 00:40:53.000000000 +0800
+++ binutils-2.37/gold/configure	2021-08-01 11:13:20.977363000 +0800
@@ -10153,7 +10153,7 @@
 /* end confdefs.h.  */
 
 template<typename T> extern void foo(const char*, ...)
-  __attribute__ ((__format__ (__printf__, 1, 2)));
+  __attribute__ ((__format__ (gnu_printf, 1, 2)));
 template<typename T> void foo(const char* format, ...) {}
 void bar() { foo<int>("%s\n", "foo"); }
 
diff -urN binutils-2.37.orig/gold/configure.ac binutils-2.37/gold/configure.ac
--- binutils-2.37.orig/gold/configure.ac	2021-07-08 19:37:20.000000000 +0800
+++ binutils-2.37/gold/configure.ac	2021-08-01 11:13:28.640398400 +0800
@@ -678,7 +678,7 @@
 [gold_cv_template_attribute],
 [AC_COMPILE_IFELSE([AC_LANG_SOURCE([
 template<typename T> extern void foo(const char*, ...)
-  __attribute__ ((__format__ (__printf__, 1, 2)));
+  __attribute__ ((__format__ (gnu_printf, 1, 2)));
 template<typename T> void foo(const char* format, ...) {}
 void bar() { foo<int>("%s\n", "foo"); }
 ])], [gold_cv_template_attribute=yes], [gold_cv_template_attribute=no])])
diff -urN binutils-2.37.orig/include/ansidecl.h binutils-2.37/include/ansidecl.h
--- binutils-2.37.orig/include/ansidecl.h	2021-07-08 19:37:20.000000000 +0800
+++ binutils-2.37/include/ansidecl.h	2021-08-01 11:13:57.084307400 +0800
@@ -195,7 +195,7 @@
    before GCC 3.3, but as of 3.3 we need to add the `nonnull'
    attribute to retain this behavior.  */
 #ifndef ATTRIBUTE_PRINTF
-#define ATTRIBUTE_PRINTF(m, n) __attribute__ ((__format__ (__printf__, m, n))) ATTRIBUTE_NONNULL(m)
+#define ATTRIBUTE_PRINTF(m, n) __attribute__ ((__format__ (gnu_printf, m, n))) ATTRIBUTE_NONNULL(m)
 #define ATTRIBUTE_PRINTF_1 ATTRIBUTE_PRINTF(1, 2)
 #define ATTRIBUTE_PRINTF_2 ATTRIBUTE_PRINTF(2, 3)
 #define ATTRIBUTE_PRINTF_3 ATTRIBUTE_PRINTF(3, 4)
@@ -223,7 +223,7 @@
    NULL format specifier was allowed as of gcc 3.3.  */
 #ifndef ATTRIBUTE_NULL_PRINTF
 # if (GCC_VERSION >= 3003)
-#  define ATTRIBUTE_NULL_PRINTF(m, n) __attribute__ ((__format__ (__printf__, m, n)))
+#  define ATTRIBUTE_NULL_PRINTF(m, n) __attribute__ ((__format__ (gnu_printf, m, n)))
 # else
 #  define ATTRIBUTE_NULL_PRINTF(m, n)
 # endif /* GNUC >= 3.3 */
